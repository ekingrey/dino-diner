@page
@model Website.Pages.MenuModel
@{
    ViewData["Title"] = "Menu";
}
    <div class="content">
        <div class="itemContent">
            <h1>Menu</h1>

            @if (Model.entree.Count() != 0 && (Model.menuCategory.Contains("Combo") || Model.menuCategory.Count == 0))
            {
                <h2>Combos</h2>
                @foreach (IMenuItem item in Model.menuItems)
                {
                    @if (item is Entrees entree)
                    {
                        <div class="menu-item">
                            @(Model.cc = new CretaceousCombo(entree))

                            <div class="details">
                                Price: @Model.cc.Price<br />

                                Calories: @Model.cc.Calories<br />
                                Ingredients:
                                @foreach (string ingredient in @Model.cc.Ingredients)
                                {
                                    @(ingredient + ", ")
                                }

                            </div>
                        </div>
                        <br />
                    }

                }
            }


            @if (Model.entree.Count() != 0 && (Model.menuCategory.Contains("Entree") || Model.menuCategory.Count == 0))
            {
                <h2>Entrees</h2>

                @foreach (IMenuItem item in Model.menuItems)
                {
                    @if (item is Entrees entree)
                    {
                        <div class="menu-item">
                            @entree
                            <div class="details">
                                Price: @entree.Price<br />

                                Calories: @entree.Calories<br />
                                Ingredients:
                                @foreach (string ingredient in entree.Ingredients)
                                {
                                    @(ingredient + ", ")
                                }

                            </div>
                        </div>
                        <br />
                    }

                }
            }

            @if (Model.side.Count() != 0)
            {
                <h2>Sides</h2>
                @foreach (IMenuItem item in Model.menuItems)
                {
                    @if (item is Side side)
                    {
                        <div class="menu-item">
                            @side
                            <div class="details">
                                Price: @side.Price<br />

                                Calories: @side.Calories<br />
                                Ingredients:
                                @foreach (string ingredient in side.Ingredients)
                                {
                                    @(ingredient + ", ")
                                }

                            </div>
                        </div>
                        <br />
                    }

                }
            }

            @if (Model.drink.Count() != 0)
            {
                <h2>Drinks</h2>
                @foreach (IMenuItem item in Model.menuItems)
                {
                    @if (item is Drink drink)
                    {
                        <div class="menu-item">
                            @drink
                            <div class="details">
                                Price: @drink.Price<br />

                                Calories: @drink.Calories<br />
                                Ingredients:
                                @foreach (string ingredient in drink.Ingredients)
                                {
                                    @(ingredient + ", ")
                                }

                            </div>
                        </div>
                        <br />
                    }

                }
            }

        </div>
            <form method="post">
                <h4>Search</h4>
                <input type="text" name="search" value="@Model.search" />
                <input type="submit" name="filter" id="filter" value="Apply Filter(s)" />

                <h4> Menu Catagory</h4>

                <div class="menu-category">

                    <label>
                        <input name="menuCategory" type="checkbox" value="Combo" checked="@Model.menuCategory.Contains("Combo")"/>
                        Combo<br />
                    </label>
                    <label>
                        <input name="menuCategory" type="checkbox" value="Entree" checked="@Model.menuCategory.Contains("Entree")"/>
                        Entree<br />
                    </label>
                    <label>
                        <input name="menuCategory" type="checkbox" value="Side" checked="@Model.menuCategory.Contains("Side")"/>
                        Side<br />
                    </label>

                    <label>
                        <input name="menuCategory" type="checkbox" value="Drink" checked="@Model.menuCategory.Contains("Drink")"/>
                        Drink<br />
                    </label>

                    <h4>Cost</h4>
                    <label>
                        Min
                        <input type="number" min="0" max="10" step="0.1" id="minimum-Price" name="minimumPrice" value="@Model.minimumPrice" />
                        <br />
                        Max
                        <input type="number" min="0" max="10" step="0.1" id="maximum-Price" name="maximumPrice" value="@Model.maximumPrice" />

                    </label>
                    

                    <h4> Exclude Ingredient</h4>

                    <div class="exclude-ingredient">
                        @for (int i = 0; i < Model.ingredients.Count(); i++)
                        {
                        <label>
                            <input name="ingredientsList" type="checkbox" value="@Model.ingredients[i]" checked="@Model.ingredientsList.Contains(@Model.ingredients[i])"/>
                            @Model.ingredients[i] <br />
                        </label>
                        }



                    </div>

</form>
        
     </div>